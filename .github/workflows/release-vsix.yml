name: Build & Release VSIX

on:
  # Tag like v0.0.3 to trigger a release
  push:
    tags:
      - "v*"
  # Manual trigger (optional)
  workflow_dispatch:
    inputs:
      version:
        description: "Version to package (e.g. 0.0.3). If empty and a tag triggered, it uses the tag."
        required: false
      prerelease:
        description: "Mark the GitHub Release as a prerelease?"
        type: boolean
        default: false

permissions:
  contents: write  # required to create releases

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install deps
        run: npm ci

      # Align package.json version with tag (vX -> X), or with manual input
      - name: Compute version
        id: ver
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            V="${{ github.event.inputs.version }}"
          else
            # Strip leading 'v' from tag like v1.2.3
            V="${GITHUB_REF_NAME#v}"
          fi
          echo "version=$V" >> "$GITHUB_OUTPUT"

      - name: Set package.json version
        run: npm version --no-git-tag-version "${{ steps.ver.outputs.version }}"

      - name: Build
        run: npm run build

      - name: Package VSIX
        run: npx vsce package
        # Output is usually: <name>-<version>.vsix

      - name: Find artifact
        id: artifact
        run: |
          VSIX="$(ls *.vsix | head -n1)"
          echo "path=$VSIX" >> "$GITHUB_OUTPUT"
          echo "VSIX=$VSIX"
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: vsix
          path: ${{ steps.artifact.outputs.path }}

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: vsix
          path: ./dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name || format('v{0}', github.event.inputs.version) }}
          name: ${{ github.ref_name || format('v{0}', github.event.inputs.version) }}
          prerelease: ${{ github.event.inputs.prerelease == true }}
          files: |
            dist/*.vsix
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
